<!--When using form_with helper 
     1. Use (model:) so that the form is pre-populated with the existing object's data (since this is an edit action)
     2. It normally uses ajax to submit the form.  To override that with 
        a simple Get request:  local: true -->

<div class="container justify-content-center col-10">
  <%= form_with(model: @post, local: true, 
                              class: "shadow p-3 mb-3 bg-grey rounded")  do |f| %>

    <div class="row g-3 mb-1 justify-content-center">
      <div class="col-2 text-end">
        <h5>
          <%= f.label "Title:", class: "col-form-label" %>
        </h5>
      </div>
      <div class="col-8">
        <%= f.text_field :title, 
                          class: "form-control shadow rounded",
                          placeholder: "Enter a title" %>
      </div>
    </div>

    <div class="row g-3 mb-1 justify-content-center">
        <div class="col-10">
          <%= f.text_area :body, rows: 15, 
                                 class: "form-control shadow rounded",
                                 placeholder: "Enter body here" %>
        </div>
    </div>

    <div class="row justify-content-center">
      <div class="col-8 mb-0">
        <h6><%= f.label "Category(s):", class: "col-form-label" %></h6>
        <%= f.collection_select :category_ids, Category.all.order(name: :asc), :id, :name, 
                                   { prompt: "ctrl-click for multiple selections" },
                                   { multiple: true, 
                                     size: 5,
                                     class: "form-select form-select-sm shadow rounded" 
                                    } 
                                   %>

      </div>
    </div>
      
    <div class="text-center mt-2 mb-2">
      <%= f.submit %>
    </div>

  <% end %>
</div>

<div class="text-center mt-2 mb-2">
  <%= link_to "[ Cancel and return to Articles Listing ]",
              posts_path,
              class: "text-decoration-none" %>
</div>

